<?xml version='1.0' encoding='utf-8'?>
<DATA model='Central Model' version='1.0.0.20' scope='METRICS' export='OK'><!-- File generated with CAST Metrics Compiler - 8.3.6 -->
  <DSS_METRIC_TYPES>
    <METRIC_ID>2000000</METRIC_ID>
    <METRIC_NAME>Avoid local variables shadowing class fields</METRIC_NAME>
    <METRIC_DESCRIPTION>See Metric Documentation</METRIC_DESCRIPTION>
    <METRIC_TYPE>3</METRIC_TYPE>
    <METRIC_GROUP>1</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>610</SCOPE_ID>
    <PROPERTY_ID>2200001</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>2000001</METRIC_ID>
    <METRIC_NAME>Avoid local variables shadowing class fields</METRIC_NAME>
    <METRIC_DESCRIPTION>description details</METRIC_DESCRIPTION>
    <METRIC_TYPE>2</METRIC_TYPE>
    <METRIC_GROUP>2</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>0</SCOPE_ID>
    <PROPERTY_ID>0</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>2000002</METRIC_ID>
    <METRIC_NAME>Child class fields should not shadow parent class fields</METRIC_NAME>
    <METRIC_DESCRIPTION>See Metric Documentation</METRIC_DESCRIPTION>
    <METRIC_TYPE>3</METRIC_TYPE>
    <METRIC_GROUP>1</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>1027009</SCOPE_ID>
    <PROPERTY_ID>2200002</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>2000003</METRIC_ID>
    <METRIC_NAME>Child class fields should not shadow parent class fields</METRIC_NAME>
    <METRIC_DESCRIPTION>description details</METRIC_DESCRIPTION>
    <METRIC_TYPE>2</METRIC_TYPE>
    <METRIC_GROUP>2</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>0</SCOPE_ID>
    <PROPERTY_ID>0</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>2000004</METRIC_ID>
    <METRIC_NAME>Inherited member visibility should not be decreased</METRIC_NAME>
    <METRIC_DESCRIPTION>See Metric Documentation</METRIC_DESCRIPTION>
    <METRIC_TYPE>3</METRIC_TYPE>
    <METRIC_GROUP>1</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>610</SCOPE_ID>
    <PROPERTY_ID>2200003</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>2000005</METRIC_ID>
    <METRIC_NAME>Inherited member visibility should not be decreased</METRIC_NAME>
    <METRIC_DESCRIPTION>description details</METRIC_DESCRIPTION>
    <METRIC_TYPE>2</METRIC_TYPE>
    <METRIC_GROUP>2</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>0</SCOPE_ID>
    <PROPERTY_ID>0</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>2000006</METRIC_ID>
    <METRIC_NAME>Track "FIXME" tags</METRIC_NAME>
    <METRIC_DESCRIPTION>See Metric Documentation</METRIC_DESCRIPTION>
    <METRIC_TYPE>3</METRIC_TYPE>
    <METRIC_GROUP>1</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>603</SCOPE_ID>
    <PROPERTY_ID>2200004</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>2000007</METRIC_ID>
    <METRIC_NAME>Track "FIXME" tags</METRIC_NAME>
    <METRIC_DESCRIPTION>description details</METRIC_DESCRIPTION>
    <METRIC_TYPE>2</METRIC_TYPE>
    <METRIC_GROUP>2</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>0</SCOPE_ID>
    <PROPERTY_ID>0</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>2000008</METRIC_ID>
    <METRIC_NAME>Track "TODO" tags</METRIC_NAME>
    <METRIC_DESCRIPTION>See Metric Documentation</METRIC_DESCRIPTION>
    <METRIC_TYPE>3</METRIC_TYPE>
    <METRIC_GROUP>1</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>603</SCOPE_ID>
    <PROPERTY_ID>2200005</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>2000009</METRIC_ID>
    <METRIC_NAME>Track "TODO" tags</METRIC_NAME>
    <METRIC_DESCRIPTION>description details</METRIC_DESCRIPTION>
    <METRIC_TYPE>2</METRIC_TYPE>
    <METRIC_GROUP>2</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>0</SCOPE_ID>
    <PROPERTY_ID>0</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>2000010</METRIC_ID>
    <METRIC_NAME>Classes implementing "IEquatable&lt;T&gt;" should be sealed</METRIC_NAME>
    <METRIC_DESCRIPTION>See Metric Documentation</METRIC_DESCRIPTION>
    <METRIC_TYPE>3</METRIC_TYPE>
    <METRIC_GROUP>1</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>601</SCOPE_ID>
    <PROPERTY_ID>2200006</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>2000011</METRIC_ID>
    <METRIC_NAME>Classes implementing "IEquatable&lt;T&gt;" should be sealed</METRIC_NAME>
    <METRIC_DESCRIPTION>description details</METRIC_DESCRIPTION>
    <METRIC_TYPE>2</METRIC_TYPE>
    <METRIC_GROUP>2</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>0</SCOPE_ID>
    <PROPERTY_ID>0</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>2000012</METRIC_ID>
    <METRIC_NAME>Empty arrays and collections should be returned instead of null</METRIC_NAME>
    <METRIC_DESCRIPTION>See Metric Documentation</METRIC_DESCRIPTION>
    <METRIC_TYPE>3</METRIC_TYPE>
    <METRIC_GROUP>1</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>610</SCOPE_ID>
    <PROPERTY_ID>2200007</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>2000013</METRIC_ID>
    <METRIC_NAME>Empty arrays and collections should be returned instead of null</METRIC_NAME>
    <METRIC_DESCRIPTION>description details</METRIC_DESCRIPTION>
    <METRIC_TYPE>2</METRIC_TYPE>
    <METRIC_GROUP>2</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>0</SCOPE_ID>
    <PROPERTY_ID>0</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>2000014</METRIC_ID>
    <METRIC_NAME>Interface instances should not be cast to concrete types</METRIC_NAME>
    <METRIC_DESCRIPTION>See Metric Documentation</METRIC_DESCRIPTION>
    <METRIC_TYPE>3</METRIC_TYPE>
    <METRIC_GROUP>1</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>610</SCOPE_ID>
    <PROPERTY_ID>2200008</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPES>
    <METRIC_ID>2000015</METRIC_ID>
    <METRIC_NAME>Interface instances should not be cast to concrete types</METRIC_NAME>
    <METRIC_DESCRIPTION>description details</METRIC_DESCRIPTION>
    <METRIC_TYPE>2</METRIC_TYPE>
    <METRIC_GROUP>2</METRIC_GROUP>
    <METRIC_DEPENDS_ON>$n$u$l$l$</METRIC_DEPENDS_ON>
    <METRIC_OPTIONS>0</METRIC_OPTIONS>
    <SCOPE_ID>0</SCOPE_ID>
    <PROPERTY_ID>0</PROPERTY_ID>
  </DSS_METRIC_TYPES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>61003</METRIC_PARENT_ID>
    <METRIC_ID>2000002</METRIC_ID>
    <METRIC_INDEX>2</METRIC_INDEX>
    <AGGREGATE_WEIGHT>5</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_FILTER_SCOPE</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>61003</METRIC_PARENT_ID>
    <METRIC_ID>2000004</METRIC_ID>
    <METRIC_INDEX>3</METRIC_INDEX>
    <AGGREGATE_WEIGHT>5</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_FILTER_SCOPE</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>61003</METRIC_PARENT_ID>
    <METRIC_ID>2000010</METRIC_ID>
    <METRIC_INDEX>4</METRIC_INDEX>
    <AGGREGATE_WEIGHT>5</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_FILTER_SCOPE</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>61007</METRIC_PARENT_ID>
    <METRIC_ID>2000006</METRIC_ID>
    <METRIC_INDEX>2</METRIC_INDEX>
    <AGGREGATE_WEIGHT>5</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_FILTER_SCOPE</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>61007</METRIC_PARENT_ID>
    <METRIC_ID>2000008</METRIC_ID>
    <METRIC_INDEX>3</METRIC_INDEX>
    <AGGREGATE_WEIGHT>5</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_FILTER_SCOPE</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>66069</METRIC_PARENT_ID>
    <METRIC_ID>2000000</METRIC_ID>
    <METRIC_INDEX>2</METRIC_INDEX>
    <AGGREGATE_WEIGHT>4</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_FILTER_SCOPE</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>66069</METRIC_PARENT_ID>
    <METRIC_ID>2000012</METRIC_ID>
    <METRIC_INDEX>3</METRIC_INDEX>
    <AGGREGATE_WEIGHT>5</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_FILTER_SCOPE</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>66069</METRIC_PARENT_ID>
    <METRIC_ID>2000014</METRIC_ID>
    <METRIC_INDEX>4</METRIC_INDEX>
    <AGGREGATE_WEIGHT>5</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_FILTER_SCOPE</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>2000000</METRIC_PARENT_ID>
    <METRIC_ID>2000001</METRIC_ID>
    <METRIC_INDEX>1</METRIC_INDEX>
    <AGGREGATE_WEIGHT>1</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_DIAG_SCOPE_GENERIC_NUM</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>2000002</METRIC_PARENT_ID>
    <METRIC_ID>2000003</METRIC_ID>
    <METRIC_INDEX>1</METRIC_INDEX>
    <AGGREGATE_WEIGHT>1</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_DIAG_SCOPE_GENERIC_NUM</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>2000004</METRIC_PARENT_ID>
    <METRIC_ID>2000005</METRIC_ID>
    <METRIC_INDEX>1</METRIC_INDEX>
    <AGGREGATE_WEIGHT>1</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_DIAG_SCOPE_GENERIC_NUM</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>2000006</METRIC_PARENT_ID>
    <METRIC_ID>2000007</METRIC_ID>
    <METRIC_INDEX>1</METRIC_INDEX>
    <AGGREGATE_WEIGHT>1</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_DIAG_SCOPE_GENERIC_NUM</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>2000008</METRIC_PARENT_ID>
    <METRIC_ID>2000009</METRIC_ID>
    <METRIC_INDEX>1</METRIC_INDEX>
    <AGGREGATE_WEIGHT>1</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_DIAG_SCOPE_GENERIC_NUM</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>2000010</METRIC_PARENT_ID>
    <METRIC_ID>2000011</METRIC_ID>
    <METRIC_INDEX>1</METRIC_INDEX>
    <AGGREGATE_WEIGHT>1</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_DIAG_SCOPE_GENERIC_NUM</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>2000012</METRIC_PARENT_ID>
    <METRIC_ID>2000013</METRIC_ID>
    <METRIC_INDEX>1</METRIC_INDEX>
    <AGGREGATE_WEIGHT>1</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_DIAG_SCOPE_GENERIC_NUM</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_TYPE_TREES>
    <METRIC_PARENT_ID>2000014</METRIC_PARENT_ID>
    <METRIC_ID>2000015</METRIC_ID>
    <METRIC_INDEX>1</METRIC_INDEX>
    <AGGREGATE_WEIGHT>1</AGGREGATE_WEIGHT>
    <METRIC_SCOPE_PROCEDURE_NAME>DSS_DIAG_SCOPE_GENERIC_NUM</METRIC_SCOPE_PROCEDURE_NAME>
    <METRIC_SCOPE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_SCOPE_PROCEDURE_NAME_2>
    <METRIC_CRITICAL>0</METRIC_CRITICAL>
  </DSS_METRIC_TYPE_TREES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>2000000</METRIC_ID>
    <METRIC_VALUE_INDEX>0</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Grade and status distribution</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>Generic grade and status distribution calculation for diagnostics</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>ADG_RESULT_DIAG_STATUS</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>ADG_CENTRAL_RESULT_DIAG</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>0</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>2000000</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Avoid local variables shadowing class fields</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>See Metric documentation</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>1</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>2000000</METRIC_ID>
    <METRIC_VALUE_INDEX>2</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>total</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>total</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_DIAG_TOTAL_GENERIC</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>2000001</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>detail</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>detail</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_METRIC_VALUE_SCOPE</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>2000002</METRIC_ID>
    <METRIC_VALUE_INDEX>0</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Grade and status distribution</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>Generic grade and status distribution calculation for diagnostics</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>ADG_RESULT_DIAG_STATUS</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>ADG_CENTRAL_RESULT_DIAG</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>0</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>2000002</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Child class fields should not shadow parent class fields</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>See Metric documentation</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>1</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>2000002</METRIC_ID>
    <METRIC_VALUE_INDEX>2</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>total</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>total</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_DIAG_TOTAL_GENERIC</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>2000003</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>detail</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>detail</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_METRIC_VALUE_SCOPE</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>2000004</METRIC_ID>
    <METRIC_VALUE_INDEX>0</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Grade and status distribution</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>Generic grade and status distribution calculation for diagnostics</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>ADG_RESULT_DIAG_STATUS</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>ADG_CENTRAL_RESULT_DIAG</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>0</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>2000004</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Inherited member visibility should not be decreased</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>See Metric documentation</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>1</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>2000004</METRIC_ID>
    <METRIC_VALUE_INDEX>2</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>total</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>total</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_DIAG_TOTAL_GENERIC</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>2000005</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>detail</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>detail</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_METRIC_VALUE_SCOPE</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>2000006</METRIC_ID>
    <METRIC_VALUE_INDEX>0</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Grade and status distribution</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>Generic grade and status distribution calculation for diagnostics</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>ADG_RESULT_DIAG_STATUS</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>ADG_CENTRAL_RESULT_DIAG</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>0</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>2000006</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Track "FIXME" tags</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>See Metric documentation</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>1</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>2000006</METRIC_ID>
    <METRIC_VALUE_INDEX>2</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>total</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>total</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_DIAG_TOTAL_GENERIC</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>2000007</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>detail</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>detail</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_METRIC_VALUE_SCOPE</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>2000008</METRIC_ID>
    <METRIC_VALUE_INDEX>0</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Grade and status distribution</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>Generic grade and status distribution calculation for diagnostics</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>ADG_RESULT_DIAG_STATUS</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>ADG_CENTRAL_RESULT_DIAG</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>0</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>2000008</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Track "TODO" tags</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>See Metric documentation</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>1</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>2000008</METRIC_ID>
    <METRIC_VALUE_INDEX>2</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>total</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>total</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_DIAG_TOTAL_GENERIC</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>2000009</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>detail</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>detail</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_METRIC_VALUE_SCOPE</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>2000010</METRIC_ID>
    <METRIC_VALUE_INDEX>0</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Grade and status distribution</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>Generic grade and status distribution calculation for diagnostics</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>ADG_RESULT_DIAG_STATUS</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>ADG_CENTRAL_RESULT_DIAG</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>0</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>2000010</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Classes implementing "IEquatable&lt;T&gt;" should be sealed</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>See Metric documentation</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>1</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>2000010</METRIC_ID>
    <METRIC_VALUE_INDEX>2</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>total</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>total</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_DIAG_TOTAL_GENERIC</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>2000011</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>detail</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>detail</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_METRIC_VALUE_SCOPE</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>2000012</METRIC_ID>
    <METRIC_VALUE_INDEX>0</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Grade and status distribution</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>Generic grade and status distribution calculation for diagnostics</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>ADG_RESULT_DIAG_STATUS</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>ADG_CENTRAL_RESULT_DIAG</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>0</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>2000012</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Empty arrays and collections should be returned instead of null</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>See Metric documentation</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>1</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>2000012</METRIC_ID>
    <METRIC_VALUE_INDEX>2</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>total</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>total</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_DIAG_TOTAL_GENERIC</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>2000013</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>detail</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>detail</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_METRIC_VALUE_SCOPE</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>2000014</METRIC_ID>
    <METRIC_VALUE_INDEX>0</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Grade and status distribution</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>Generic grade and status distribution calculation for diagnostics</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>ADG_RESULT_DIAG_STATUS</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>ADG_CENTRAL_RESULT_DIAG</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>0</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>2000014</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>Interface instances should not be cast to concrete types</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>See Metric documentation</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>1</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>2000014</METRIC_ID>
    <METRIC_VALUE_INDEX>2</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>total</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>total</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_DIAG_TOTAL_GENERIC</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_VALUE_TYPES>
    <METRIC_ID>2000015</METRIC_ID>
    <METRIC_VALUE_INDEX>1</METRIC_VALUE_INDEX>
    <METRIC_VALUE_NAME>detail</METRIC_VALUE_NAME>
    <METRIC_VALUE_DESCRIPTION>detail</METRIC_VALUE_DESCRIPTION>
    <METRIC_VALUE_PROCEDURE_NAME>DSS_METRIC_VALUE_SCOPE</METRIC_VALUE_PROCEDURE_NAME>
    <METRIC_AGGREGATE_OPERATOR>0</METRIC_AGGREGATE_OPERATOR>
    <METRIC_VALUE_PROCEDURE_NAME_2>$n$u$l$l$</METRIC_VALUE_PROCEDURE_NAME_2>
    <METRIC_AGGREGATE_OPERATOR_2>0</METRIC_AGGREGATE_OPERATOR_2>
    <METRIC_VALUE_TYPE>5</METRIC_VALUE_TYPE>
  </DSS_METRIC_VALUE_TYPES>
  <DSS_METRIC_PARAM_TYPES>
    <METRIC_ID>2000000</METRIC_ID>
    <PARAM_INDEX>1</PARAM_INDEX>
    <OBJECT_TYPE_ID>138383</OBJECT_TYPE_ID>
    <PARAM_TYPE>0</PARAM_TYPE>
    <PARAM_NAME>Techno filter</PARAM_NAME>
    <PARAM_DESCRIPTION>$n$u$l$l$</PARAM_DESCRIPTION>
  </DSS_METRIC_PARAM_TYPES>
  <DSS_METRIC_PARAM_TYPES>
    <METRIC_ID>2000002</METRIC_ID>
    <PARAM_INDEX>1</PARAM_INDEX>
    <OBJECT_TYPE_ID>138383</OBJECT_TYPE_ID>
    <PARAM_TYPE>0</PARAM_TYPE>
    <PARAM_NAME>Techno filter</PARAM_NAME>
    <PARAM_DESCRIPTION>$n$u$l$l$</PARAM_DESCRIPTION>
  </DSS_METRIC_PARAM_TYPES>
  <DSS_METRIC_PARAM_TYPES>
    <METRIC_ID>2000004</METRIC_ID>
    <PARAM_INDEX>1</PARAM_INDEX>
    <OBJECT_TYPE_ID>138383</OBJECT_TYPE_ID>
    <PARAM_TYPE>0</PARAM_TYPE>
    <PARAM_NAME>Techno filter</PARAM_NAME>
    <PARAM_DESCRIPTION>$n$u$l$l$</PARAM_DESCRIPTION>
  </DSS_METRIC_PARAM_TYPES>
  <DSS_METRIC_PARAM_TYPES>
    <METRIC_ID>2000006</METRIC_ID>
    <PARAM_INDEX>1</PARAM_INDEX>
    <OBJECT_TYPE_ID>138383</OBJECT_TYPE_ID>
    <PARAM_TYPE>0</PARAM_TYPE>
    <PARAM_NAME>Techno filter</PARAM_NAME>
    <PARAM_DESCRIPTION>$n$u$l$l$</PARAM_DESCRIPTION>
  </DSS_METRIC_PARAM_TYPES>
  <DSS_METRIC_PARAM_TYPES>
    <METRIC_ID>2000008</METRIC_ID>
    <PARAM_INDEX>1</PARAM_INDEX>
    <OBJECT_TYPE_ID>138383</OBJECT_TYPE_ID>
    <PARAM_TYPE>0</PARAM_TYPE>
    <PARAM_NAME>Techno filter</PARAM_NAME>
    <PARAM_DESCRIPTION>$n$u$l$l$</PARAM_DESCRIPTION>
  </DSS_METRIC_PARAM_TYPES>
  <DSS_METRIC_PARAM_TYPES>
    <METRIC_ID>2000010</METRIC_ID>
    <PARAM_INDEX>1</PARAM_INDEX>
    <OBJECT_TYPE_ID>138383</OBJECT_TYPE_ID>
    <PARAM_TYPE>0</PARAM_TYPE>
    <PARAM_NAME>Techno filter</PARAM_NAME>
    <PARAM_DESCRIPTION>$n$u$l$l$</PARAM_DESCRIPTION>
  </DSS_METRIC_PARAM_TYPES>
  <DSS_METRIC_PARAM_TYPES>
    <METRIC_ID>2000012</METRIC_ID>
    <PARAM_INDEX>1</PARAM_INDEX>
    <OBJECT_TYPE_ID>138383</OBJECT_TYPE_ID>
    <PARAM_TYPE>0</PARAM_TYPE>
    <PARAM_NAME>Techno filter</PARAM_NAME>
    <PARAM_DESCRIPTION>$n$u$l$l$</PARAM_DESCRIPTION>
  </DSS_METRIC_PARAM_TYPES>
  <DSS_METRIC_PARAM_TYPES>
    <METRIC_ID>2000014</METRIC_ID>
    <PARAM_INDEX>1</PARAM_INDEX>
    <OBJECT_TYPE_ID>138383</OBJECT_TYPE_ID>
    <PARAM_TYPE>0</PARAM_TYPE>
    <PARAM_NAME>Techno filter</PARAM_NAME>
    <PARAM_DESCRIPTION>$n$u$l$l$</PARAM_DESCRIPTION>
  </DSS_METRIC_PARAM_TYPES>
  <DSS_METRIC_STATUS_THRESHOLDS>
    <METRIC_ID>2000000</METRIC_ID>
    <STATUS>0</STATUS>
    <THRESHOLD_1>50.0</THRESHOLD_1>
    <THRESHOLD_2>90.0</THRESHOLD_2>
    <THRESHOLD_3>95.0</THRESHOLD_3>
    <THRESHOLD_4>99.0</THRESHOLD_4>
  </DSS_METRIC_STATUS_THRESHOLDS>
  <DSS_METRIC_STATUS_THRESHOLDS>
    <METRIC_ID>2000002</METRIC_ID>
    <STATUS>0</STATUS>
    <THRESHOLD_1>50.0</THRESHOLD_1>
    <THRESHOLD_2>90.0</THRESHOLD_2>
    <THRESHOLD_3>95.0</THRESHOLD_3>
    <THRESHOLD_4>99.0</THRESHOLD_4>
  </DSS_METRIC_STATUS_THRESHOLDS>
  <DSS_METRIC_STATUS_THRESHOLDS>
    <METRIC_ID>2000004</METRIC_ID>
    <STATUS>0</STATUS>
    <THRESHOLD_1>50.0</THRESHOLD_1>
    <THRESHOLD_2>90.0</THRESHOLD_2>
    <THRESHOLD_3>95.0</THRESHOLD_3>
    <THRESHOLD_4>99.0</THRESHOLD_4>
  </DSS_METRIC_STATUS_THRESHOLDS>
  <DSS_METRIC_STATUS_THRESHOLDS>
    <METRIC_ID>2000006</METRIC_ID>
    <STATUS>0</STATUS>
    <THRESHOLD_1>50.0</THRESHOLD_1>
    <THRESHOLD_2>90.0</THRESHOLD_2>
    <THRESHOLD_3>95.0</THRESHOLD_3>
    <THRESHOLD_4>99.0</THRESHOLD_4>
  </DSS_METRIC_STATUS_THRESHOLDS>
  <DSS_METRIC_STATUS_THRESHOLDS>
    <METRIC_ID>2000008</METRIC_ID>
    <STATUS>0</STATUS>
    <THRESHOLD_1>50.0</THRESHOLD_1>
    <THRESHOLD_2>90.0</THRESHOLD_2>
    <THRESHOLD_3>95.0</THRESHOLD_3>
    <THRESHOLD_4>99.0</THRESHOLD_4>
  </DSS_METRIC_STATUS_THRESHOLDS>
  <DSS_METRIC_STATUS_THRESHOLDS>
    <METRIC_ID>2000010</METRIC_ID>
    <STATUS>0</STATUS>
    <THRESHOLD_1>10.0</THRESHOLD_1>
    <THRESHOLD_2>70.0</THRESHOLD_2>
    <THRESHOLD_3>90.0</THRESHOLD_3>
    <THRESHOLD_4>99.0</THRESHOLD_4>
  </DSS_METRIC_STATUS_THRESHOLDS>
  <DSS_METRIC_STATUS_THRESHOLDS>
    <METRIC_ID>2000012</METRIC_ID>
    <STATUS>0</STATUS>
    <THRESHOLD_1>10.0</THRESHOLD_1>
    <THRESHOLD_2>70.0</THRESHOLD_2>
    <THRESHOLD_3>95.0</THRESHOLD_3>
    <THRESHOLD_4>99.0</THRESHOLD_4>
  </DSS_METRIC_STATUS_THRESHOLDS>
  <DSS_METRIC_STATUS_THRESHOLDS>
    <METRIC_ID>2000014</METRIC_ID>
    <STATUS>0</STATUS>
    <THRESHOLD_1>50.0</THRESHOLD_1>
    <THRESHOLD_2>90.0</THRESHOLD_2>
    <THRESHOLD_3>95.0</THRESHOLD_3>
    <THRESHOLD_4>99.0</THRESHOLD_4>
  </DSS_METRIC_STATUS_THRESHOLDS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000000</METRIC_ID>
    <DESCRIPTION_TYPE_ID>0</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Avoid local variables shadowing class fields</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000000</METRIC_ID>
    <DESCRIPTION_TYPE_ID>1</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Both overriding or shadowing a class field (typically non-private)  can strongly impact the readability, and therefore the maintainability, of a piece of code.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000000</METRIC_ID>
    <DESCRIPTION_TYPE_ID>2</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>This rule will check whether local variables are shadowing class fields.

In case of C#, classes as well as structs are considered.
In case of Visual Basic, modules also considered in addition to classes.

In case of classes, only non-private fields of Base classes are considered.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000000</METRIC_ID>
    <DESCRIPTION_TYPE_ID>3</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Ensure you have an explicit way, usually in form of naming conventions, to name your local variable to avoid conflict with class fields.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000000</METRIC_ID>
    <DESCRIPTION_TYPE_ID>4</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>CERT, DCL01-C. - Do not reuse variable names in subscopes
CERT, DCL51-J. - Do not shadow or obscure identifiers in subscopes</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000000</METRIC_ID>
    <DESCRIPTION_TYPE_ID>5</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>// Field Shadowing

class MyVector {
  private int val = 1;
  private void doLogic() {
    int val;
    //...
  }
}

// Variable shadowing

class MyVector {
  private int i = 0;
  private void doLogic() {
    for (i = 0; i &lt; 10; i++) {/* ... */}
    for (int i = 0; i &lt; 20; i++) {/* ... */}
  }
}</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000000</METRIC_ID>
    <DESCRIPTION_TYPE_ID>6</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>// Field Shadowing

class MyVector {
  private int val = 1;
  private void doLogic() {
    int newValue;
    //...
  }
}

// Variable Shadowing

class MyVector {
  private void doLogic() {
    for (int i = 0; i &lt; 10; i++) {/* ... */}
    for (int i = 0; i &lt; 20; i++) {/* ... */}
  }
}</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000000</METRIC_ID>
    <DESCRIPTION_TYPE_ID>7</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Associated to each violation, the following information is provided:
- The number of violation occurrences
- Bookmarks for violation occurrences found in the source code
- Bookmark to field that is being shadowed</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000000</METRIC_ID>
    <DESCRIPTION_TYPE_ID>8</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of Methods</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000000</METRIC_ID>
    <DESCRIPTION_TYPE_ID>9</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of violation occurrences</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000002</METRIC_ID>
    <DESCRIPTION_TYPE_ID>0</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Child class fields should not shadow parent class fields</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000002</METRIC_ID>
    <DESCRIPTION_TYPE_ID>1</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Having a variable with the same name in two unrelated classes is fine, but do the same thing within a class hierarchy and you'll get confusion at best, chaos at worst.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000002</METRIC_ID>
    <DESCRIPTION_TYPE_ID>4</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>https://rules.sonarsource.com/csharp/RSPEC-2387</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000002</METRIC_ID>
    <DESCRIPTION_TYPE_ID>5</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>public class Fruit
{
  protected Season ripe;
  protected Color flesh;

  // ...
}

public class Raspberry : Fruit
{
  private bool ripe; // Noncompliant
  private static Color FLESH; // Noncompliant
}</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000002</METRIC_ID>
    <DESCRIPTION_TYPE_ID>6</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>public class Fruit
{
  protected Season ripe;
  protected Color flesh;

  // ...
}

public class Raspberry : Fruit
{
  private bool ripened;
  private static Color FLESH_COLOR;
}</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000002</METRIC_ID>
    <DESCRIPTION_TYPE_ID>7</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Associated to each violation, the following information is provided:
- The number of violation occurrences
- Bookmarks for violation occurrences found in the source code</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000002</METRIC_ID>
    <DESCRIPTION_TYPE_ID>9</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of violation occurrences</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000004</METRIC_ID>
    <DESCRIPTION_TYPE_ID>0</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Inherited member visibility should not be decreased</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000004</METRIC_ID>
    <DESCRIPTION_TYPE_ID>1</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Changing an inherited member to private will not prevent access to the base class implementation</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000004</METRIC_ID>
    <DESCRIPTION_TYPE_ID>2</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>This rule raises an issue when a private method in an unsealed type has a signature that is identical to a public method declared in a base type.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000004</METRIC_ID>
    <DESCRIPTION_TYPE_ID>4</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>https://rules.sonarsource.com/csharp/RSPEC-4015</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000004</METRIC_ID>
    <DESCRIPTION_TYPE_ID>5</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>using System;

namespace MyLibrary
{
  public class Foo
  {
    public void SomeMethod(int count) { }
  }
  public class Bar:Foo
  {
    private void SomeMethod(int count) { } // Noncompliant
  }
}</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000004</METRIC_ID>
    <DESCRIPTION_TYPE_ID>6</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>using System;

namespace MyLibrary
{
  public class Foo
  {
    public void SomeMethod(int count) { }
  }
  public sealed class Bar : Foo
  {
    private void SomeMethod(int count) { }
  }
}</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000004</METRIC_ID>
    <DESCRIPTION_TYPE_ID>7</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Associated to each violation, the following information is provided:
- The number of violation occurrences
- Bookmarks for violation occurrences found in the source code</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000004</METRIC_ID>
    <DESCRIPTION_TYPE_ID>9</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of violation occurrences</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000006</METRIC_ID>
    <DESCRIPTION_TYPE_ID>0</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Track "FIXME" tags</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000006</METRIC_ID>
    <DESCRIPTION_TYPE_ID>1</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>FIXME tags are commonly used to mark places where a bug is suspected, but which the developer wants to deal with later.

Sometimes the developer will not have the time or will simply forget to get back to that tag.

This rule is meant to track those tags and to ensure that they do not go unnoticed.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000006</METRIC_ID>
    <DESCRIPTION_TYPE_ID>2</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>This rule will check the use of FIXME tags in comment for method and classes. All comments, single line and multi-line, are considered that have "FIXME" (case insensitive) at the start of the comment.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000006</METRIC_ID>
    <DESCRIPTION_TYPE_ID>3</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Fix the issues in code and remove "FIXME" tags.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000006</METRIC_ID>
    <DESCRIPTION_TYPE_ID>4</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>MITRE, CWE-546 - Suspicious Comment</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000006</METRIC_ID>
    <DESCRIPTION_TYPE_ID>5</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>private int Divide(int numerator, int denominator)
{
    return numerator / denominator;  // FIXME denominator value might be  0
}</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000006</METRIC_ID>
    <DESCRIPTION_TYPE_ID>7</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Associated to each violation, the following information is provided:
- The number of violation occurrences
- Bookmarks for violation occurrences found in the source code</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000006</METRIC_ID>
    <DESCRIPTION_TYPE_ID>8</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of Artifacts</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000006</METRIC_ID>
    <DESCRIPTION_TYPE_ID>9</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of violation occurrences</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000008</METRIC_ID>
    <DESCRIPTION_TYPE_ID>0</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Track "TODO" tags</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000008</METRIC_ID>
    <DESCRIPTION_TYPE_ID>1</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>TODO tags are commonly used to mark places where some more code is required, but which the developer wants to implement later.

Sometimes the developer will not have the time or will simply forget to get back to that tag.

This rule is meant to track those tags and to ensure that they do not go unnoticed.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000008</METRIC_ID>
    <DESCRIPTION_TYPE_ID>2</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>This rule will check the use of TODO tags in comment for method and classes. All comments, single line and multi-line, are considered that have "TODO" (case insensitive) at the start of the comment.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000008</METRIC_ID>
    <DESCRIPTION_TYPE_ID>3</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Complete remaining tasks and remove "TODO" tags.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000008</METRIC_ID>
    <DESCRIPTION_TYPE_ID>4</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>MITRE, CWE-546 - Suspicious Comment</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000008</METRIC_ID>
    <DESCRIPTION_TYPE_ID>5</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>private void DoSomething()
{
  // TODO
}</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000008</METRIC_ID>
    <DESCRIPTION_TYPE_ID>7</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Associated to each violation, the following information is provided:
- The number of violation occurrences
- Bookmarks for violation occurrences found in the source code</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000008</METRIC_ID>
    <DESCRIPTION_TYPE_ID>8</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of Artifacts</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000008</METRIC_ID>
    <DESCRIPTION_TYPE_ID>9</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of violation occurrences</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000010</METRIC_ID>
    <DESCRIPTION_TYPE_ID>0</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Classes implementing "IEquatable&lt;T&gt;" should be sealed</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000010</METRIC_ID>
    <DESCRIPTION_TYPE_ID>1</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>When a class implements the IEquatable&lt;T&gt; interface, it enters a contract that, in effect, states "I know how to compare two instances of type T or any type derived from T for equality.". However if that class is derived, it is very unlikely that the base class will know how to make a meaningful comparison. Therefore that implicit contract is now broken.

Alternatively IEqualityComparer&lt;T&gt; provides a safer interface and is used by collections or Equals could be made virtual.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000010</METRIC_ID>
    <DESCRIPTION_TYPE_ID>2</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>This rule raises an issue when a unsealed, public or protected class implements IEquatable&lt;T&gt; and the Equals is neither virtual nor abstract.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000010</METRIC_ID>
    <DESCRIPTION_TYPE_ID>3</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Make class sealed or use IEqualityComparer&lt;T&gt; instead.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000010</METRIC_ID>
    <DESCRIPTION_TYPE_ID>4</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>https://msdn.microsoft.com/en-us/library/ms132151(v=vs.110).aspx
https://rules.sonarsource.com/csharp/RSPEC-4035</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000010</METRIC_ID>
    <DESCRIPTION_TYPE_ID>5</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>using System;

namespace MyLibrary
{
  class Base : IEquatable&lt;Base&gt; // Noncompliant
  {
    bool Equals(Base other)
    {
      if (other == null) { return false };
      // do comparison of base properties
    }

    override bool Equals(object other)  =&gt; Equals(other as Base);
  }

  class A : Base
  {
    bool Equals(A other)
    {
      if (other == null) { return false };
      // do comparison of A properties
      return base.Equals(other);
    }

    override bool Equals(object other)  =&gt; Equals(other as A);
  }

  class B : Base
  {
    bool Equals(B other)
    {
      if (other == null) { return false };
      // do comparison of B properties
     return base.Equals(other);
    }

    override bool Equals(object other)  =&gt; Equals(other as B);
  }

  static void Main() {
    A a = new A();
    B b = new B();

    Console.WriteLine(a.Equals(b)); // This calls the WRONG equals. This causes Base::Equals(Base)
    //  to be called which only compares the properties in Base and ignores the fact that
    // a and b are different types. In the working example A::Equals(Object) would have been
    // called and Equals would return false because it correctly recognizes that a and b are
    // different types. If a and b have the same base properties they will  be returned as equal.
  }
}</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000010</METRIC_ID>
    <DESCRIPTION_TYPE_ID>6</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>using System;

namespace MyLibrary
{
    public sealed class Foo : IEquatable&lt;Foo&gt;
    {
        public bool Equals(Foo other)
        {
            // Your code here
        }
    }
}</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000010</METRIC_ID>
    <DESCRIPTION_TYPE_ID>7</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Associated to each violation, the following information is provided:
- The number of violation occurrences
- Bookmarks for violation occurrences found in the source code</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000010</METRIC_ID>
    <DESCRIPTION_TYPE_ID>8</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of Classes</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000010</METRIC_ID>
    <DESCRIPTION_TYPE_ID>9</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of violation occurrences</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000012</METRIC_ID>
    <DESCRIPTION_TYPE_ID>0</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Empty arrays and collections should be returned instead of null</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000012</METRIC_ID>
    <DESCRIPTION_TYPE_ID>1</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Returning null instead of an actual array or collection forces callers of the method to explicitly test for nullity, making them more complex and less readable.

Moreover, in many cases, null is used as a synonym for empty.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000012</METRIC_ID>
    <DESCRIPTION_TYPE_ID>2</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>This rule will verify that methods\properties that return arrays\collections do not return null.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000012</METRIC_ID>
    <DESCRIPTION_TYPE_ID>3</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Return empty array\collection.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000012</METRIC_ID>
    <DESCRIPTION_TYPE_ID>4</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>CERT, MSC19-C. - For functions that return an array, prefer returning an empty array over a null value
CERT, MET55-J. - Return an empty array or collection instead of a null value for methods that return an array or collection</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000012</METRIC_ID>
    <DESCRIPTION_TYPE_ID>5</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>public Result[] GetResults()
{
    return null; // Noncompliant
}

public IEnumerable&lt;Result&gt; GetResults()
{
    return null; // Noncompliant
}

public IEnumerable&lt;Result&gt; GetResults() =&gt; null; // Noncompliant

public IEnumerable&lt;Result&gt; Results
{
    get
    {
        return null; // Noncompliant
    }
}

public IEnumerable&lt;Result&gt; Results =&gt; null; // Noncompliant</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000012</METRIC_ID>
    <DESCRIPTION_TYPE_ID>6</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>public Result[] GetResults()
{
    return new Result[0];
}

public IEnumerable&lt;Result&gt; GetResults()
{
    return Enumerable.Empty&lt;Result&gt;();
}

public IEnumerable&lt;Result&gt; GetResults() =&gt; Enumerable.Empty&lt;Result&gt;();

public IEnumerable&lt;Result&gt; Results
{
    get
    {
        return Enumerable.Empty&lt;Result&gt;();
    }
}

public IEnumerable&lt;Result&gt; Results =&gt; Enumerable.Empty&lt;Result&gt;();</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000012</METRIC_ID>
    <DESCRIPTION_TYPE_ID>7</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Associated to each violation, the following information is provided:
- The number of violation occurrences
- Bookmarks for violation occurrences found in the source code</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000012</METRIC_ID>
    <DESCRIPTION_TYPE_ID>8</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of Artifacts</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000012</METRIC_ID>
    <DESCRIPTION_TYPE_ID>9</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of violation occurrences</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000014</METRIC_ID>
    <DESCRIPTION_TYPE_ID>0</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Interface instances should not be cast to concrete types</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000014</METRIC_ID>
    <DESCRIPTION_TYPE_ID>1</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Needing to cast from an interface to a concrete type indicates that something is wrong with the abstraction in use, likely that something is missing from the interface. Instead of casting to a discrete type, the missing functionality should be added to the interface. Otherwise there is a risk of runtime exceptions.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000014</METRIC_ID>
    <DESCRIPTION_TYPE_ID>2</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>This rule will check whether variable of interface type is converted into concrete type. Struct and Class are considered as Concrete type.

Note: Abstract classes are not considered as concrete classes.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000014</METRIC_ID>
    <DESCRIPTION_TYPE_ID>3</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Remove the cast.</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000014</METRIC_ID>
    <DESCRIPTION_TYPE_ID>5</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>public interface IMyInterface
{
  void DoStuff();
}

public class MyClass1 : IMyInterface
{
  public int Data { get { return new Random().Next(); } }

  public void DoStuff()
  {
    // TODO...
  }
}

public static class DowncastExampleProgram
{
  static void EntryPoint(IMyInterface interfaceRef)
  {
    MyClass1 class1 = (MyClass1)interfaceRef;  // Noncompliant
    int privateData = class1.Data;

    class1 = interfaceRef as MyClass1;  // Noncompliant
    if (class1 != null)
    {
      // ...
    }
  }
}</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000014</METRIC_ID>
    <DESCRIPTION_TYPE_ID>7</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Associated to each violation, the following information is provided:
- The number of violation occurrences
- Bookmarks for violation occurrences found in the source code</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000014</METRIC_ID>
    <DESCRIPTION_TYPE_ID>8</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of Artifacts</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
  <DSS_METRIC_DESCRIPTIONS>
    <METRIC_ID>2000014</METRIC_ID>
    <DESCRIPTION_TYPE_ID>9</DESCRIPTION_TYPE_ID>
    <LANGUAGE>ENGLISH</LANGUAGE>
    <METRIC_DESCRIPTION>Number of violation occurrences</METRIC_DESCRIPTION>
  </DSS_METRIC_DESCRIPTIONS>
</DATA>