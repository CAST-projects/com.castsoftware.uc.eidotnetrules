<?xml version="1.0" encoding="utf-8"?>
<root>
  <metric id="61003" type="technical-criterion" originalName="Programming Practices - OO Inheritance and Polymorphism" contributorId="2000002" contributorType="quality-rule" contributorOriginalName="Child class fields should not shadow parent class fields" critical="false" weight="5" />
  <metric id="61003" type="technical-criterion" originalName="Programming Practices - OO Inheritance and Polymorphism" contributorId="2000004" contributorType="quality-rule" contributorOriginalName="Inherited member visibility should not be decreased" critical="false" weight="5" />
  <metric id="61003" type="technical-criterion" originalName="Programming Practices - OO Inheritance and Polymorphism" contributorId="2000010" contributorType="quality-rule" contributorOriginalName="Classes implementing &quot;IEquatable&lt;T&gt;&quot; should be sealed" critical="false" weight="5" />
  <metric id="61006" type="technical-criterion" originalName="Documentation - Style Conformity" contributorId="2000020" contributorType="quality-rule" contributorOriginalName="Avoid methods named without following synchronous/asynchronous convention" critical="false" weight="5" />
  <metric id="61007" type="technical-criterion" originalName="Documentation - Bad Comments" contributorId="2000006" contributorType="quality-rule" contributorOriginalName="Track &quot;FIXME&quot; tags" critical="false" weight="5" />
  <metric id="61007" type="technical-criterion" originalName="Documentation - Bad Comments" contributorId="2000008" contributorType="quality-rule" contributorOriginalName="Track &quot;TODO&quot; tags" critical="false" weight="5" />
  <metric id="61014" type="technical-criterion" originalName="Programming Practices - Error and Exception Handling" contributorId="2000016" contributorType="quality-rule" contributorOriginalName="Ensure proper arguments to Events" critical="false" weight="4" />
  <metric id="61014" type="technical-criterion" originalName="Programming Practices - Error and Exception Handling" contributorId="2000026" contributorType="quality-rule" contributorOriginalName="Avoid creating exception without throwing them" critical="false" weight="5" />
  <metric id="61018" type="technical-criterion" originalName="Efficiency - Memory, Network and Disk Space Management" contributorId="2000032" contributorType="quality-rule" contributorOriginalName="Avoid empty finalizers" critical="false" weight="4" />
  <metric id="61024" type="technical-criterion" originalName="Programming Practices - Structuredness" contributorId="2000030" contributorType="quality-rule" contributorOriginalName="Conditional structures should not have identical branches" critical="false" weight="1" />
  <metric id="61026" type="technical-criterion" originalName="Complexity - Technical Complexity" contributorId="2000034" contributorType="quality-rule" contributorOriginalName="Avoid recursive type inheritance" critical="false" weight="1" />
  <metric id="61027" type="technical-criterion" originalName="Dead code (static)" contributorId="2000026" contributorType="quality-rule" contributorOriginalName="Avoid creating exception without throwing them" critical="false" weight="1" />
  <metric id="66069" type="technical-criterion" originalName="Programming Practices - Unexpected Behavior" contributorId="2000000" contributorType="quality-rule" contributorOriginalName="Avoid local variables shadowing class fields" critical="false" weight="4" />
  <metric id="66069" type="technical-criterion" originalName="Programming Practices - Unexpected Behavior" contributorId="2000012" contributorType="quality-rule" contributorOriginalName="Empty arrays and collections should be returned instead of null" critical="false" weight="5" />
  <metric id="66069" type="technical-criterion" originalName="Programming Practices - Unexpected Behavior" contributorId="2000014" contributorType="quality-rule" contributorOriginalName="Interface instances should not be cast to concrete types" critical="false" weight="5" />
  <metric id="66069" type="technical-criterion" originalName="Programming Practices - Unexpected Behavior" contributorId="2000018" contributorType="quality-rule" contributorOriginalName="Avoid using Assembly.LoadFrom, Assembly.LoadFile and Assembly.LoadWithPartialName" critical="false" weight="5" />
  <metric id="66069" type="technical-criterion" originalName="Programming Practices - Unexpected Behavior" contributorId="2000022" contributorType="quality-rule" contributorOriginalName="Culture Dependent String operations should specify culture" critical="false" weight="1" />
  <metric id="66069" type="technical-criterion" originalName="Programming Practices - Unexpected Behavior" contributorId="2000024" contributorType="quality-rule" contributorOriginalName="Mutable static fields of type System.Collections.Generic.ICollection&lt;T&gt; or System.Array should not be public static" critical="false" weight="1" />
  <metric id="66069" type="technical-criterion" originalName="Programming Practices - Unexpected Behavior" contributorId="2000028" contributorType="quality-rule" contributorOriginalName="Use Logical OR instead of Bitwise OR in boolean context" critical="false" weight="1" />
  <metric id="66069" type="technical-criterion" originalName="Programming Practices - Unexpected Behavior" contributorId="2000036" contributorType="quality-rule" contributorOriginalName="For loop stop condition should be invariant" critical="false" weight="5" />
</root>