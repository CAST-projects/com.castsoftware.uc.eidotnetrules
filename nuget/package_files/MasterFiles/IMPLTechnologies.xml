<?xml version="1.0" encoding="utf-8"?>
<root>
  <metric id="2200000" type="quality-rule" originalName="Avoid local variables shadowing class fields" filter="138383" filterLabel="C#" />
  <metric id="2200002" type="quality-rule" originalName="Child class fields should not shadow parent class fields" filter="138383" filterLabel="C#" />
  <metric id="2200004" type="quality-rule" originalName="Inherited member visibility should not be decreased" filter="138383" filterLabel="C#" />
  <metric id="2200006" type="quality-rule" originalName="Track &quot;FIXME&quot; tags" filter="138383" filterLabel="C#" />
  <metric id="2200008" type="quality-rule" originalName="Track &quot;TODO&quot; tags" filter="138383" filterLabel="C#" />
  <metric id="2200010" type="quality-rule" originalName="Classes implementing &quot;IEquatable&lt;T&gt;&quot; should be sealed" filter="138383" filterLabel="C#" />
  <metric id="2200012" type="quality-rule" originalName="Empty arrays and collections should be returned instead of null" filter="138383" filterLabel="C#" />
  <metric id="2200014" type="quality-rule" originalName="Interface instances should not be cast to concrete types" filter="138383" filterLabel="C#" />
  <metric id="2200016" type="quality-rule" originalName="Ensure proper arguments to Events" filter="138383" filterLabel="C#" />
  <metric id="2200018" type="quality-rule" originalName="Avoid using Assembly.LoadFrom, Assembly.LoadFile and Assembly.LoadWithPartialName" filter="138383" filterLabel="C#" />
  <metric id="2200020" type="quality-rule" originalName="Avoid methods named without following synchronous/asynchronous convention" filter="138383" filterLabel="C#" />
  <metric id="2200022" type="quality-rule" originalName="Culture Dependent String operations should specify culture" filter="138383" filterLabel="C#" />
  <metric id="2200024" type="quality-rule" originalName="Mutable static fields of type System.Collections.Generic.ICollection&lt;T&gt; or System.Array should not be public static" filter="138383" filterLabel="C#" />
  <metric id="2200026" type="quality-rule" originalName="Avoid creating exception without throwing them" filter="138383" filterLabel="C#" />
  <metric id="2200028" type="quality-rule" originalName="Use Logical OR and AND instead of Bitwise OR and AND in boolean context" filter="138383" filterLabel="C#" />
  <metric id="2200030" type="quality-rule" originalName="Avoid empty finalizers" filter="138383" filterLabel="C#" />
  <metric id="2200032" type="quality-rule" originalName="Avoid recursive type inheritance" filter="138383" filterLabel="C#" />
  <metric id="2200034" type="quality-rule" originalName="For loop stop condition should be invariant" filter="138383" filterLabel="C#" />
  <metric id="2200036" type="quality-rule" originalName="Ensure constructors of serializable classes are secure" filter="138383" filterLabel="C#" />
  <metric id="2200038" type="quality-rule" originalName="Merge adjacent try blocks with identical catch/finally statements" filter="138383" filterLabel="C#" />
  <metric id="2200040" type="quality-rule" originalName="Avoid assignments in sub-expressions" filter="138383" filterLabel="C#" />
  <metric id="2200042" type="quality-rule" originalName="Avoid creating new instance of shared instance (.NET)" filter="138383" filterLabel="C#" />
  <metric id="2200044" type="quality-rule" originalName="Recursion should not be infinite" filter="138383" filterLabel="C#" />
  <metric id="2200046" type="quality-rule" originalName="Ensure Serializable Types Follow Best Practices" filter="138383" filterLabel="C#" />
  <metric id="2200048" type="quality-rule" originalName="Members of larger scope element should not have conflicting transparency annotations" filter="138383" filterLabel="C#" />
  <metric id="2200050" type="quality-rule" originalName="Avoid NULL Pointer Dereference" filter="138383" filterLabel="C#" />
  <metric id="2200052" type="quality-rule" originalName="Avoid having the same implementation in ALL BRANCHES of a conditional structure" filter="138383" filterLabel="C#" />
  <metric id="2200054" type="quality-rule" originalName="Avoid Persist Security Info in connection string" filter="138383" filterLabel="C#" />
  <metric id="2200056" type="quality-rule" originalName="Avoid hidden form field" filter="138383" filterLabel="C#" />
  <metric id="2200058" type="quality-rule" originalName="Avoid security-critical information exposure" filter="138383" filterLabel="C#" />
  <metric id="2200060" type="quality-rule" originalName="Avoid using XmlDocument without restriction of XML External Entity Reference (XXE)" filter="138383" filterLabel="C#" />
  <metric id="2200062" type="quality-rule" originalName="Avoid using XmlTextReader without restriction of XML External Entity Reference (XXE)" filter="138383" filterLabel="C#" />
  <metric id="2200064" type="quality-rule" originalName="Avoid using XPathNavigator without restriction of XML External Entity Reference (XXE)" filter="138383" filterLabel="C#" />
  <metric id="2200066" type="quality-rule" originalName="Avoid direct use of threads (.Net)" filter="138383" filterLabel="C#" />
  <metric id="2200068" type="quality-rule" originalName="Avoid unsafe object binding (.NET)" filter="138383" filterLabel="C#" />
  <metric id="2200070" type="quality-rule" originalName="EnsureToAbandonPreviousSessionBeforeModifyingCurrentSession" filter="138383" filterLabel="C#" />
</root>